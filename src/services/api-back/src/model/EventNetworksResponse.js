/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventNetworksProducerResponseDtoInner from './EventNetworksProducerResponseDtoInner';
import PaginationResponse from './PaginationResponse';

/**
 * The EventNetworksResponse model module.
 * @module model/EventNetworksResponse
 * @version 1.0
 */
class EventNetworksResponse {
    /**
     * Constructs a new <code>EventNetworksResponse</code>.
     * @alias module:model/EventNetworksResponse
     * @param data {Array.<module:model/EventNetworksProducerResponseDtoInner>} 
     * @param pageInfo {module:model/PaginationResponse} 
     */
    constructor(data, pageInfo) { 
        
        EventNetworksResponse.initialize(this, data, pageInfo);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, data, pageInfo) { 
        obj['data'] = data;
        obj['pageInfo'] = pageInfo;
    }

    /**
     * Constructs a <code>EventNetworksResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventNetworksResponse} obj Optional instance to populate.
     * @return {module:model/EventNetworksResponse} The populated <code>EventNetworksResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventNetworksResponse();

            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], [EventNetworksProducerResponseDtoInner]);
            }
            if (data.hasOwnProperty('pageInfo')) {
                obj['pageInfo'] = ApiClient.convertToType(data['pageInfo'], PaginationResponse);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventNetworksResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventNetworksResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EventNetworksResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['data']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['data'])) {
                throw new Error("Expected the field `data` to be an array in the JSON data but got " + data['data']);
            }
            // validate the optional field `data` (array)
            for (const item of data['data']) {
                EventNetworksProducerResponseDtoInner.validateJSON(item);
            };
        }
        // validate the optional field `pageInfo`
        if (data['pageInfo']) { // data not null
          PaginationResponse.validateJSON(data['pageInfo']);
        }

        return true;
    }


}

EventNetworksResponse.RequiredProperties = ["data", "pageInfo"];

/**
 * @member {Array.<module:model/EventNetworksProducerResponseDtoInner>} data
 */
EventNetworksResponse.prototype['data'] = undefined;

/**
 * @member {module:model/PaginationResponse} pageInfo
 */
EventNetworksResponse.prototype['pageInfo'] = undefined;






export default EventNetworksResponse;

