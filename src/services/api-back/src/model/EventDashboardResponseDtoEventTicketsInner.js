/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventDashboardResponseDtoEventTicketsInner model module.
 * @module model/EventDashboardResponseDtoEventTicketsInner
 * @version 1.0
 */
class EventDashboardResponseDtoEventTicketsInner {
    /**
     * Constructs a new <code>EventDashboardResponseDtoEventTicketsInner</code>.
     * @alias module:model/EventDashboardResponseDtoEventTicketsInner
     * @param id {String} 
     * @param title {String} 
     * @param price {Number} 
     * @param partQtd {Number} 
     * @param limit {Number} 
     */
    constructor(id, title, price, partQtd, limit) { 
        
        EventDashboardResponseDtoEventTicketsInner.initialize(this, id, title, price, partQtd, limit);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, title, price, partQtd, limit) { 
        obj['id'] = id;
        obj['title'] = title;
        obj['price'] = price;
        obj['partQtd'] = partQtd;
        obj['limit'] = limit;
    }

    /**
     * Constructs a <code>EventDashboardResponseDtoEventTicketsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventDashboardResponseDtoEventTicketsInner} obj Optional instance to populate.
     * @return {module:model/EventDashboardResponseDtoEventTicketsInner} The populated <code>EventDashboardResponseDtoEventTicketsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventDashboardResponseDtoEventTicketsInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('partQtd')) {
                obj['partQtd'] = ApiClient.convertToType(data['partQtd'], 'Number');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventDashboardResponseDtoEventTicketsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventDashboardResponseDtoEventTicketsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EventDashboardResponseDtoEventTicketsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}

EventDashboardResponseDtoEventTicketsInner.RequiredProperties = ["id", "title", "price", "partQtd", "limit"];

/**
 * @member {String} id
 */
EventDashboardResponseDtoEventTicketsInner.prototype['id'] = undefined;

/**
 * @member {String} title
 */
EventDashboardResponseDtoEventTicketsInner.prototype['title'] = undefined;

/**
 * @member {Number} price
 */
EventDashboardResponseDtoEventTicketsInner.prototype['price'] = undefined;

/**
 * @member {Number} partQtd
 */
EventDashboardResponseDtoEventTicketsInner.prototype['partQtd'] = undefined;

/**
 * @member {Number} limit
 */
EventDashboardResponseDtoEventTicketsInner.prototype['limit'] = undefined;






export default EventDashboardResponseDtoEventTicketsInner;

