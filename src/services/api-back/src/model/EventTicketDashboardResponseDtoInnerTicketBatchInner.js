/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner from './EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner';

/**
 * The EventTicketDashboardResponseDtoInnerTicketBatchInner model module.
 * @module model/EventTicketDashboardResponseDtoInnerTicketBatchInner
 * @version 1.0
 */
class EventTicketDashboardResponseDtoInnerTicketBatchInner {
    /**
     * Constructs a new <code>EventTicketDashboardResponseDtoInnerTicketBatchInner</code>.
     * @alias module:model/EventTicketDashboardResponseDtoInnerTicketBatchInner
     * @param id {String} 
     * @param batch {Number} 
     * @param price {Number} 
     * @param sells {Number} 
     * @param limit {Number} 
     * @param currency {String} 
     * @param isPrivate {Boolean} 
     * @param link {Array.<module:model/EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner>} 
     */
    constructor(id, batch, price, sells, limit, currency, isPrivate, link) { 
        
        EventTicketDashboardResponseDtoInnerTicketBatchInner.initialize(this, id, batch, price, sells, limit, currency, isPrivate, link);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, batch, price, sells, limit, currency, isPrivate, link) { 
        obj['id'] = id;
        obj['batch'] = batch;
        obj['price'] = price;
        obj['sells'] = sells;
        obj['limit'] = limit;
        obj['currency'] = currency;
        obj['isPrivate'] = isPrivate;
        obj['link'] = link;
    }

    /**
     * Constructs a <code>EventTicketDashboardResponseDtoInnerTicketBatchInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventTicketDashboardResponseDtoInnerTicketBatchInner} obj Optional instance to populate.
     * @return {module:model/EventTicketDashboardResponseDtoInnerTicketBatchInner} The populated <code>EventTicketDashboardResponseDtoInnerTicketBatchInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventTicketDashboardResponseDtoInnerTicketBatchInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('batch')) {
                obj['batch'] = ApiClient.convertToType(data['batch'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('sells')) {
                obj['sells'] = ApiClient.convertToType(data['sells'], 'Number');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('isPrivate')) {
                obj['isPrivate'] = ApiClient.convertToType(data['isPrivate'], 'Boolean');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], [EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventTicketDashboardResponseDtoInnerTicketBatchInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventTicketDashboardResponseDtoInnerTicketBatchInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EventTicketDashboardResponseDtoInnerTicketBatchInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        if (data['link']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['link'])) {
                throw new Error("Expected the field `link` to be an array in the JSON data but got " + data['link']);
            }
            // validate the optional field `link` (array)
            for (const item of data['link']) {
                EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner.validateJSON(item);
            };
        }

        return true;
    }


}

EventTicketDashboardResponseDtoInnerTicketBatchInner.RequiredProperties = ["id", "batch", "price", "sells", "limit", "currency", "isPrivate", "link"];

/**
 * @member {String} id
 */
EventTicketDashboardResponseDtoInnerTicketBatchInner.prototype['id'] = undefined;

/**
 * @member {Number} batch
 */
EventTicketDashboardResponseDtoInnerTicketBatchInner.prototype['batch'] = undefined;

/**
 * @member {Number} price
 */
EventTicketDashboardResponseDtoInnerTicketBatchInner.prototype['price'] = undefined;

/**
 * @member {Number} sells
 */
EventTicketDashboardResponseDtoInnerTicketBatchInner.prototype['sells'] = undefined;

/**
 * @member {Number} limit
 */
EventTicketDashboardResponseDtoInnerTicketBatchInner.prototype['limit'] = undefined;

/**
 * @member {String} currency
 */
EventTicketDashboardResponseDtoInnerTicketBatchInner.prototype['currency'] = undefined;

/**
 * @member {Boolean} isPrivate
 */
EventTicketDashboardResponseDtoInnerTicketBatchInner.prototype['isPrivate'] = undefined;

/**
 * @member {Array.<module:model/EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner>} link
 */
EventTicketDashboardResponseDtoInnerTicketBatchInner.prototype['link'] = undefined;






export default EventTicketDashboardResponseDtoInnerTicketBatchInner;

