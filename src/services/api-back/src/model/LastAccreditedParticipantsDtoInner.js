/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LastAccreditedParticipantsDtoInner model module.
 * @module model/LastAccreditedParticipantsDtoInner
 * @version 1.0
 */
class LastAccreditedParticipantsDtoInner {
    /**
     * Constructs a new <code>LastAccreditedParticipantsDtoInner</code>.
     * @alias module:model/LastAccreditedParticipantsDtoInner
     * @param id {Number} 
     * @param ticketName {String} 
     * @param userName {String} 
     * @param status {module:model/LastAccreditedParticipantsDtoInner.StatusEnum} 
     * @param createdAt {Object} 
     */
    constructor(id, ticketName, userName, status, createdAt) { 
        
        LastAccreditedParticipantsDtoInner.initialize(this, id, ticketName, userName, status, createdAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, ticketName, userName, status, createdAt) { 
        obj['id'] = id;
        obj['ticketName'] = ticketName;
        obj['userName'] = userName;
        obj['status'] = status;
        obj['createdAt'] = createdAt;
    }

    /**
     * Constructs a <code>LastAccreditedParticipantsDtoInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LastAccreditedParticipantsDtoInner} obj Optional instance to populate.
     * @return {module:model/LastAccreditedParticipantsDtoInner} The populated <code>LastAccreditedParticipantsDtoInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LastAccreditedParticipantsDtoInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('ticketName')) {
                obj['ticketName'] = ApiClient.convertToType(data['ticketName'], 'String');
            }
            if (data.hasOwnProperty('userName')) {
                obj['userName'] = ApiClient.convertToType(data['userName'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LastAccreditedParticipantsDtoInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LastAccreditedParticipantsDtoInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LastAccreditedParticipantsDtoInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ticketName'] && !(typeof data['ticketName'] === 'string' || data['ticketName'] instanceof String)) {
            throw new Error("Expected the field `ticketName` to be a primitive type in the JSON string but got " + data['ticketName']);
        }
        // ensure the json data is a string
        if (data['userName'] && !(typeof data['userName'] === 'string' || data['userName'] instanceof String)) {
            throw new Error("Expected the field `userName` to be a primitive type in the JSON string but got " + data['userName']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

LastAccreditedParticipantsDtoInner.RequiredProperties = ["id", "ticketName", "userName", "status", "createdAt"];

/**
 * @member {Number} id
 */
LastAccreditedParticipantsDtoInner.prototype['id'] = undefined;

/**
 * @member {String} ticketName
 */
LastAccreditedParticipantsDtoInner.prototype['ticketName'] = undefined;

/**
 * @member {String} userName
 */
LastAccreditedParticipantsDtoInner.prototype['userName'] = undefined;

/**
 * @member {module:model/LastAccreditedParticipantsDtoInner.StatusEnum} status
 */
LastAccreditedParticipantsDtoInner.prototype['status'] = undefined;

/**
 * @member {Object} createdAt
 */
LastAccreditedParticipantsDtoInner.prototype['createdAt'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
LastAccreditedParticipantsDtoInner['StatusEnum'] = {

    /**
     * value: "CHECK_IN_EARLY"
     * @const
     */
    "CHECK_IN_EARLY": "CHECK_IN_EARLY",

    /**
     * value: "CHECK_IN"
     * @const
     */
    "CHECK_IN": "CHECK_IN",

    /**
     * value: "CHECK_OUT"
     * @const
     */
    "CHECK_OUT": "CHECK_OUT",

    /**
     * value: "CANCELED"
     * @const
     */
    "CANCELED": "CANCELED",

    /**
     * value: "ENABLE"
     * @const
     */
    "ENABLE": "ENABLE"
};



export default LastAccreditedParticipantsDtoInner;

