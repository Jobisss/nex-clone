/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventDashboardResponseDtoSellDiaryInner model module.
 * @module model/EventDashboardResponseDtoSellDiaryInner
 * @version 1.0
 */
class EventDashboardResponseDtoSellDiaryInner {
    /**
     * Constructs a new <code>EventDashboardResponseDtoSellDiaryInner</code>.
     * @alias module:model/EventDashboardResponseDtoSellDiaryInner
     * @param date {String} 
     * @param total {Number} 
     */
    constructor(date, total) { 
        
        EventDashboardResponseDtoSellDiaryInner.initialize(this, date, total);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, date, total) { 
        obj['date'] = date;
        obj['total'] = total;
    }

    /**
     * Constructs a <code>EventDashboardResponseDtoSellDiaryInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventDashboardResponseDtoSellDiaryInner} obj Optional instance to populate.
     * @return {module:model/EventDashboardResponseDtoSellDiaryInner} The populated <code>EventDashboardResponseDtoSellDiaryInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventDashboardResponseDtoSellDiaryInner();

            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventDashboardResponseDtoSellDiaryInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventDashboardResponseDtoSellDiaryInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EventDashboardResponseDtoSellDiaryInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['date'] && !(typeof data['date'] === 'string' || data['date'] instanceof String)) {
            throw new Error("Expected the field `date` to be a primitive type in the JSON string but got " + data['date']);
        }

        return true;
    }


}

EventDashboardResponseDtoSellDiaryInner.RequiredProperties = ["date", "total"];

/**
 * @member {String} date
 */
EventDashboardResponseDtoSellDiaryInner.prototype['date'] = undefined;

/**
 * @member {Number} total
 */
EventDashboardResponseDtoSellDiaryInner.prototype['total'] = undefined;






export default EventDashboardResponseDtoSellDiaryInner;

