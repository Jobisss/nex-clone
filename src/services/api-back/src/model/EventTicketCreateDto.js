/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventCreateDtoEventTicketsInnerEventTicketBonusesInner from './EventCreateDtoEventTicketsInnerEventTicketBonusesInner';
import EventCreateDtoEventTicketsInnerEventTicketDaysInner from './EventCreateDtoEventTicketsInnerEventTicketDaysInner';
import EventCreateDtoEventTicketsInnerEventTicketPricesInner from './EventCreateDtoEventTicketsInnerEventTicketPricesInner';

/**
 * The EventTicketCreateDto model module.
 * @module model/EventTicketCreateDto
 * @version 1.0
 */
class EventTicketCreateDto {
    /**
     * Constructs a new <code>EventTicketCreateDto</code>.
     * @alias module:model/EventTicketCreateDto
     * @param title {String} Ticket title
     * @param description {String} Ticket description
     * @param isFree {Boolean} 
     * @param isPrivate {Boolean} 
     * @param isBonus {Boolean} 
     * @param eventTicketPrices {Array.<module:model/EventCreateDtoEventTicketsInnerEventTicketPricesInner>} 
     * @param eventTicketDays {Array.<module:model/EventCreateDtoEventTicketsInnerEventTicketDaysInner>} 
     */
    constructor(title, description, isFree, isPrivate, isBonus, eventTicketPrices, eventTicketDays) { 
        
        EventTicketCreateDto.initialize(this, title, description, isFree, isPrivate, isBonus, eventTicketPrices, eventTicketDays);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, title, description, isFree, isPrivate, isBonus, eventTicketPrices, eventTicketDays) { 
        obj['title'] = title;
        obj['description'] = description;
        obj['isFree'] = isFree;
        obj['isPrivate'] = isPrivate;
        obj['isBonus'] = isBonus;
        obj['eventTicketPrices'] = eventTicketPrices;
        obj['eventTicketDays'] = eventTicketDays;
    }

    /**
     * Constructs a <code>EventTicketCreateDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventTicketCreateDto} obj Optional instance to populate.
     * @return {module:model/EventTicketCreateDto} The populated <code>EventTicketCreateDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventTicketCreateDto();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('isFree')) {
                obj['isFree'] = ApiClient.convertToType(data['isFree'], 'Boolean');
            }
            if (data.hasOwnProperty('isPrivate')) {
                obj['isPrivate'] = ApiClient.convertToType(data['isPrivate'], 'Boolean');
            }
            if (data.hasOwnProperty('isBonus')) {
                obj['isBonus'] = ApiClient.convertToType(data['isBonus'], 'Boolean');
            }
            if (data.hasOwnProperty('eventTicketPrices')) {
                obj['eventTicketPrices'] = ApiClient.convertToType(data['eventTicketPrices'], [EventCreateDtoEventTicketsInnerEventTicketPricesInner]);
            }
            if (data.hasOwnProperty('eventTicketDays')) {
                obj['eventTicketDays'] = ApiClient.convertToType(data['eventTicketDays'], [EventCreateDtoEventTicketsInnerEventTicketDaysInner]);
            }
            if (data.hasOwnProperty('eventTicketBonuses')) {
                obj['eventTicketBonuses'] = ApiClient.convertToType(data['eventTicketBonuses'], [EventCreateDtoEventTicketsInnerEventTicketBonusesInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventTicketCreateDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventTicketCreateDto</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EventTicketCreateDto.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['eventTicketPrices']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['eventTicketPrices'])) {
                throw new Error("Expected the field `eventTicketPrices` to be an array in the JSON data but got " + data['eventTicketPrices']);
            }
            // validate the optional field `eventTicketPrices` (array)
            for (const item of data['eventTicketPrices']) {
                EventCreateDtoEventTicketsInnerEventTicketPricesInner.validateJSON(item);
            };
        }
        if (data['eventTicketDays']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['eventTicketDays'])) {
                throw new Error("Expected the field `eventTicketDays` to be an array in the JSON data but got " + data['eventTicketDays']);
            }
            // validate the optional field `eventTicketDays` (array)
            for (const item of data['eventTicketDays']) {
                EventCreateDtoEventTicketsInnerEventTicketDaysInner.validateJSON(item);
            };
        }
        if (data['eventTicketBonuses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['eventTicketBonuses'])) {
                throw new Error("Expected the field `eventTicketBonuses` to be an array in the JSON data but got " + data['eventTicketBonuses']);
            }
            // validate the optional field `eventTicketBonuses` (array)
            for (const item of data['eventTicketBonuses']) {
                EventCreateDtoEventTicketsInnerEventTicketBonusesInner.validateJSON(item);
            };
        }

        return true;
    }


}

EventTicketCreateDto.RequiredProperties = ["title", "description", "isFree", "isPrivate", "isBonus", "eventTicketPrices", "eventTicketDays"];

/**
 * Ticket title
 * @member {String} title
 */
EventTicketCreateDto.prototype['title'] = undefined;

/**
 * Ticket description
 * @member {String} description
 */
EventTicketCreateDto.prototype['description'] = undefined;

/**
 * @member {Boolean} isFree
 */
EventTicketCreateDto.prototype['isFree'] = undefined;

/**
 * @member {Boolean} isPrivate
 */
EventTicketCreateDto.prototype['isPrivate'] = undefined;

/**
 * @member {Boolean} isBonus
 */
EventTicketCreateDto.prototype['isBonus'] = undefined;

/**
 * @member {Array.<module:model/EventCreateDtoEventTicketsInnerEventTicketPricesInner>} eventTicketPrices
 */
EventTicketCreateDto.prototype['eventTicketPrices'] = undefined;

/**
 * @member {Array.<module:model/EventCreateDtoEventTicketsInnerEventTicketDaysInner>} eventTicketDays
 */
EventTicketCreateDto.prototype['eventTicketDays'] = undefined;

/**
 * @member {Array.<module:model/EventCreateDtoEventTicketsInnerEventTicketBonusesInner>} eventTicketBonuses
 */
EventTicketCreateDto.prototype['eventTicketBonuses'] = undefined;






export default EventTicketCreateDto;

