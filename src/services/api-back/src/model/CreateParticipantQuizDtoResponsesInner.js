/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateParticipantQuizDtoResponsesInner model module.
 * @module model/CreateParticipantQuizDtoResponsesInner
 * @version 1.0
 */
class CreateParticipantQuizDtoResponsesInner {
    /**
     * Constructs a new <code>CreateParticipantQuizDtoResponsesInner</code>.
     * @alias module:model/CreateParticipantQuizDtoResponsesInner
     * @param eventQuizQuestionId {String} 
     */
    constructor(eventQuizQuestionId) { 
        
        CreateParticipantQuizDtoResponsesInner.initialize(this, eventQuizQuestionId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, eventQuizQuestionId) { 
        obj['eventQuizQuestionId'] = eventQuizQuestionId;
    }

    /**
     * Constructs a <code>CreateParticipantQuizDtoResponsesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateParticipantQuizDtoResponsesInner} obj Optional instance to populate.
     * @return {module:model/CreateParticipantQuizDtoResponsesInner} The populated <code>CreateParticipantQuizDtoResponsesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateParticipantQuizDtoResponsesInner();

            if (data.hasOwnProperty('eventQuizQuestionId')) {
                obj['eventQuizQuestionId'] = ApiClient.convertToType(data['eventQuizQuestionId'], 'String');
            }
            if (data.hasOwnProperty('eventQuizQuestionOptionId')) {
                obj['eventQuizQuestionOptionId'] = ApiClient.convertToType(data['eventQuizQuestionOptionId'], 'String');
            }
            if (data.hasOwnProperty('rating')) {
                obj['rating'] = ApiClient.convertToType(data['rating'], 'Number');
            }
            if (data.hasOwnProperty('response')) {
                obj['response'] = ApiClient.convertToType(data['response'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateParticipantQuizDtoResponsesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateParticipantQuizDtoResponsesInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateParticipantQuizDtoResponsesInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['eventQuizQuestionId'] && !(typeof data['eventQuizQuestionId'] === 'string' || data['eventQuizQuestionId'] instanceof String)) {
            throw new Error("Expected the field `eventQuizQuestionId` to be a primitive type in the JSON string but got " + data['eventQuizQuestionId']);
        }
        // ensure the json data is a string
        if (data['eventQuizQuestionOptionId'] && !(typeof data['eventQuizQuestionOptionId'] === 'string' || data['eventQuizQuestionOptionId'] instanceof String)) {
            throw new Error("Expected the field `eventQuizQuestionOptionId` to be a primitive type in the JSON string but got " + data['eventQuizQuestionOptionId']);
        }
        // ensure the json data is a string
        if (data['response'] && !(typeof data['response'] === 'string' || data['response'] instanceof String)) {
            throw new Error("Expected the field `response` to be a primitive type in the JSON string but got " + data['response']);
        }

        return true;
    }


}

CreateParticipantQuizDtoResponsesInner.RequiredProperties = ["eventQuizQuestionId"];

/**
 * @member {String} eventQuizQuestionId
 */
CreateParticipantQuizDtoResponsesInner.prototype['eventQuizQuestionId'] = undefined;

/**
 * @member {String} eventQuizQuestionOptionId
 */
CreateParticipantQuizDtoResponsesInner.prototype['eventQuizQuestionOptionId'] = undefined;

/**
 * @member {Number} rating
 */
CreateParticipantQuizDtoResponsesInner.prototype['rating'] = undefined;

/**
 * @member {String} response
 */
CreateParticipantQuizDtoResponsesInner.prototype['response'] = undefined;






export default CreateParticipantQuizDtoResponsesInner;

