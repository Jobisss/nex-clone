/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventStaffAllResponseDtoInner model module.
 * @module model/EventStaffAllResponseDtoInner
 * @version 1.0
 */
class EventStaffAllResponseDtoInner {
    /**
     * Constructs a new <code>EventStaffAllResponseDtoInner</code>.
     * @alias module:model/EventStaffAllResponseDtoInner
     * @param id {String} 
     * @param title {String} 
     * @param subtitle {String} 
     * @param slug {String} 
     * @param photo {String} 
     * @param startAt {Object} 
     * @param status {module:model/EventStaffAllResponseDtoInner.StatusEnum} 
     */
    constructor(id, title, subtitle, slug, photo, startAt, status) { 
        
        EventStaffAllResponseDtoInner.initialize(this, id, title, subtitle, slug, photo, startAt, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, title, subtitle, slug, photo, startAt, status) { 
        obj['id'] = id;
        obj['title'] = title;
        obj['subtitle'] = subtitle;
        obj['slug'] = slug;
        obj['photo'] = photo;
        obj['startAt'] = startAt;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>EventStaffAllResponseDtoInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventStaffAllResponseDtoInner} obj Optional instance to populate.
     * @return {module:model/EventStaffAllResponseDtoInner} The populated <code>EventStaffAllResponseDtoInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventStaffAllResponseDtoInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('subtitle')) {
                obj['subtitle'] = ApiClient.convertToType(data['subtitle'], 'String');
            }
            if (data.hasOwnProperty('slug')) {
                obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
            }
            if (data.hasOwnProperty('photo')) {
                obj['photo'] = ApiClient.convertToType(data['photo'], 'String');
            }
            if (data.hasOwnProperty('startAt')) {
                obj['startAt'] = ApiClient.convertToType(data['startAt'], Object);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventStaffAllResponseDtoInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventStaffAllResponseDtoInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EventStaffAllResponseDtoInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['subtitle'] && !(typeof data['subtitle'] === 'string' || data['subtitle'] instanceof String)) {
            throw new Error("Expected the field `subtitle` to be a primitive type in the JSON string but got " + data['subtitle']);
        }
        // ensure the json data is a string
        if (data['slug'] && !(typeof data['slug'] === 'string' || data['slug'] instanceof String)) {
            throw new Error("Expected the field `slug` to be a primitive type in the JSON string but got " + data['slug']);
        }
        // ensure the json data is a string
        if (data['photo'] && !(typeof data['photo'] === 'string' || data['photo'] instanceof String)) {
            throw new Error("Expected the field `photo` to be a primitive type in the JSON string but got " + data['photo']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

EventStaffAllResponseDtoInner.RequiredProperties = ["id", "title", "subtitle", "slug", "photo", "startAt", "status"];

/**
 * @member {String} id
 */
EventStaffAllResponseDtoInner.prototype['id'] = undefined;

/**
 * @member {String} title
 */
EventStaffAllResponseDtoInner.prototype['title'] = undefined;

/**
 * @member {String} subtitle
 */
EventStaffAllResponseDtoInner.prototype['subtitle'] = undefined;

/**
 * @member {String} slug
 */
EventStaffAllResponseDtoInner.prototype['slug'] = undefined;

/**
 * @member {String} photo
 */
EventStaffAllResponseDtoInner.prototype['photo'] = undefined;

/**
 * @member {Object} startAt
 */
EventStaffAllResponseDtoInner.prototype['startAt'] = undefined;

/**
 * @member {module:model/EventStaffAllResponseDtoInner.StatusEnum} status
 */
EventStaffAllResponseDtoInner.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
EventStaffAllResponseDtoInner['StatusEnum'] = {

    /**
     * value: "USER_NOT_ACCEPTED"
     * @const
     */
    "USER_NOT_ACCEPTED": "USER_NOT_ACCEPTED",

    /**
     * value: "USER_REFUSED"
     * @const
     */
    "USER_REFUSED": "USER_REFUSED",

    /**
     * value: "USER_ACCEPTED"
     * @const
     */
    "USER_ACCEPTED": "USER_ACCEPTED",

    /**
     * value: "NOT_USER"
     * @const
     */
    "NOT_USER": "NOT_USER"
};



export default EventStaffAllResponseDtoInner;

