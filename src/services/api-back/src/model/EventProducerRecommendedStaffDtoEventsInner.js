/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventProducerRecommendedStaffDtoEventsInner model module.
 * @module model/EventProducerRecommendedStaffDtoEventsInner
 * @version 1.0
 */
class EventProducerRecommendedStaffDtoEventsInner {
    /**
     * Constructs a new <code>EventProducerRecommendedStaffDtoEventsInner</code>.
     * @alias module:model/EventProducerRecommendedStaffDtoEventsInner
     * @param eventId {String} 
     * @param eventTitle {String} 
     * @param eventDate {Object} 
     */
    constructor(eventId, eventTitle, eventDate) { 
        
        EventProducerRecommendedStaffDtoEventsInner.initialize(this, eventId, eventTitle, eventDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, eventId, eventTitle, eventDate) { 
        obj['eventId'] = eventId;
        obj['eventTitle'] = eventTitle;
        obj['eventDate'] = eventDate;
    }

    /**
     * Constructs a <code>EventProducerRecommendedStaffDtoEventsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventProducerRecommendedStaffDtoEventsInner} obj Optional instance to populate.
     * @return {module:model/EventProducerRecommendedStaffDtoEventsInner} The populated <code>EventProducerRecommendedStaffDtoEventsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventProducerRecommendedStaffDtoEventsInner();

            if (data.hasOwnProperty('eventId')) {
                obj['eventId'] = ApiClient.convertToType(data['eventId'], 'String');
            }
            if (data.hasOwnProperty('eventTitle')) {
                obj['eventTitle'] = ApiClient.convertToType(data['eventTitle'], 'String');
            }
            if (data.hasOwnProperty('eventDate')) {
                obj['eventDate'] = ApiClient.convertToType(data['eventDate'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventProducerRecommendedStaffDtoEventsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventProducerRecommendedStaffDtoEventsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EventProducerRecommendedStaffDtoEventsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['eventId'] && !(typeof data['eventId'] === 'string' || data['eventId'] instanceof String)) {
            throw new Error("Expected the field `eventId` to be a primitive type in the JSON string but got " + data['eventId']);
        }
        // ensure the json data is a string
        if (data['eventTitle'] && !(typeof data['eventTitle'] === 'string' || data['eventTitle'] instanceof String)) {
            throw new Error("Expected the field `eventTitle` to be a primitive type in the JSON string but got " + data['eventTitle']);
        }

        return true;
    }


}

EventProducerRecommendedStaffDtoEventsInner.RequiredProperties = ["eventId", "eventTitle", "eventDate"];

/**
 * @member {String} eventId
 */
EventProducerRecommendedStaffDtoEventsInner.prototype['eventId'] = undefined;

/**
 * @member {String} eventTitle
 */
EventProducerRecommendedStaffDtoEventsInner.prototype['eventTitle'] = undefined;

/**
 * @member {Object} eventDate
 */
EventProducerRecommendedStaffDtoEventsInner.prototype['eventDate'] = undefined;






export default EventProducerRecommendedStaffDtoEventsInner;

