/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GeneralDashboardResponseDtoBestEventsInner from './GeneralDashboardResponseDtoBestEventsInner';

/**
 * The GeneralDashboardResponseDto model module.
 * @module model/GeneralDashboardResponseDto
 * @version 1.0
 */
class GeneralDashboardResponseDto {
    /**
     * Constructs a new <code>GeneralDashboardResponseDto</code>.
     * @alias module:model/GeneralDashboardResponseDto
     * @param totalEvents {Number} 
     * @param totalTickets {Number} 
     * @param totalParticipants {Number} 
     * @param totalBrute {Number} 
     * @param totalLiquid {Number} 
     * @param totalDrawee {Number} 
     * @param bestEvents {Array.<module:model/GeneralDashboardResponseDtoBestEventsInner>} 
     * @param participantsCheckIn {Number} 
     * @param participantsNotCheckedIn {Number} 
     */
    constructor(totalEvents, totalTickets, totalParticipants, totalBrute, totalLiquid, totalDrawee, bestEvents, participantsCheckIn, participantsNotCheckedIn) { 
        
        GeneralDashboardResponseDto.initialize(this, totalEvents, totalTickets, totalParticipants, totalBrute, totalLiquid, totalDrawee, bestEvents, participantsCheckIn, participantsNotCheckedIn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, totalEvents, totalTickets, totalParticipants, totalBrute, totalLiquid, totalDrawee, bestEvents, participantsCheckIn, participantsNotCheckedIn) { 
        obj['totalEvents'] = totalEvents;
        obj['totalTickets'] = totalTickets;
        obj['totalParticipants'] = totalParticipants;
        obj['totalBrute'] = totalBrute;
        obj['totalLiquid'] = totalLiquid;
        obj['totalDrawee'] = totalDrawee;
        obj['bestEvents'] = bestEvents;
        obj['participantsCheckIn'] = participantsCheckIn;
        obj['participantsNotCheckedIn'] = participantsNotCheckedIn;
    }

    /**
     * Constructs a <code>GeneralDashboardResponseDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GeneralDashboardResponseDto} obj Optional instance to populate.
     * @return {module:model/GeneralDashboardResponseDto} The populated <code>GeneralDashboardResponseDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GeneralDashboardResponseDto();

            if (data.hasOwnProperty('totalEvents')) {
                obj['totalEvents'] = ApiClient.convertToType(data['totalEvents'], 'Number');
            }
            if (data.hasOwnProperty('totalTickets')) {
                obj['totalTickets'] = ApiClient.convertToType(data['totalTickets'], 'Number');
            }
            if (data.hasOwnProperty('totalParticipants')) {
                obj['totalParticipants'] = ApiClient.convertToType(data['totalParticipants'], 'Number');
            }
            if (data.hasOwnProperty('totalBrute')) {
                obj['totalBrute'] = ApiClient.convertToType(data['totalBrute'], 'Number');
            }
            if (data.hasOwnProperty('totalLiquid')) {
                obj['totalLiquid'] = ApiClient.convertToType(data['totalLiquid'], 'Number');
            }
            if (data.hasOwnProperty('totalDrawee')) {
                obj['totalDrawee'] = ApiClient.convertToType(data['totalDrawee'], 'Number');
            }
            if (data.hasOwnProperty('bestEvents')) {
                obj['bestEvents'] = ApiClient.convertToType(data['bestEvents'], [GeneralDashboardResponseDtoBestEventsInner]);
            }
            if (data.hasOwnProperty('participantsCheckIn')) {
                obj['participantsCheckIn'] = ApiClient.convertToType(data['participantsCheckIn'], 'Number');
            }
            if (data.hasOwnProperty('participantsNotCheckedIn')) {
                obj['participantsNotCheckedIn'] = ApiClient.convertToType(data['participantsNotCheckedIn'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GeneralDashboardResponseDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GeneralDashboardResponseDto</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GeneralDashboardResponseDto.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['bestEvents']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['bestEvents'])) {
                throw new Error("Expected the field `bestEvents` to be an array in the JSON data but got " + data['bestEvents']);
            }
            // validate the optional field `bestEvents` (array)
            for (const item of data['bestEvents']) {
                GeneralDashboardResponseDtoBestEventsInner.validateJSON(item);
            };
        }

        return true;
    }


}

GeneralDashboardResponseDto.RequiredProperties = ["totalEvents", "totalTickets", "totalParticipants", "totalBrute", "totalLiquid", "totalDrawee", "bestEvents", "participantsCheckIn", "participantsNotCheckedIn"];

/**
 * @member {Number} totalEvents
 */
GeneralDashboardResponseDto.prototype['totalEvents'] = undefined;

/**
 * @member {Number} totalTickets
 */
GeneralDashboardResponseDto.prototype['totalTickets'] = undefined;

/**
 * @member {Number} totalParticipants
 */
GeneralDashboardResponseDto.prototype['totalParticipants'] = undefined;

/**
 * @member {Number} totalBrute
 */
GeneralDashboardResponseDto.prototype['totalBrute'] = undefined;

/**
 * @member {Number} totalLiquid
 */
GeneralDashboardResponseDto.prototype['totalLiquid'] = undefined;

/**
 * @member {Number} totalDrawee
 */
GeneralDashboardResponseDto.prototype['totalDrawee'] = undefined;

/**
 * @member {Array.<module:model/GeneralDashboardResponseDtoBestEventsInner>} bestEvents
 */
GeneralDashboardResponseDto.prototype['bestEvents'] = undefined;

/**
 * @member {Number} participantsCheckIn
 */
GeneralDashboardResponseDto.prototype['participantsCheckIn'] = undefined;

/**
 * @member {Number} participantsNotCheckedIn
 */
GeneralDashboardResponseDto.prototype['participantsNotCheckedIn'] = undefined;






export default GeneralDashboardResponseDto;

