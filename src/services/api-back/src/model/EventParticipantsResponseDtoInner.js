/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventParticipantsResponseDtoInner model module.
 * @module model/EventParticipantsResponseDtoInner
 * @version 1.0
 */
class EventParticipantsResponseDtoInner {
    /**
     * Constructs a new <code>EventParticipantsResponseDtoInner</code>.
     * @alias module:model/EventParticipantsResponseDtoInner
     * @param id {String} 
     * @param name {String} 
     * @param status {module:model/EventParticipantsResponseDtoInner.StatusEnum} 
     * @param ticketName {String} 
     * @param facial {String} 
     * @param checkInDate {Object} 
     * @param payment {Boolean} 
     * @param lastStatus {String} 
     */
    constructor(id, name, status, ticketName, facial, checkInDate, payment, lastStatus) { 
        
        EventParticipantsResponseDtoInner.initialize(this, id, name, status, ticketName, facial, checkInDate, payment, lastStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name, status, ticketName, facial, checkInDate, payment, lastStatus) { 
        obj['id'] = id;
        obj['name'] = name;
        obj['status'] = status;
        obj['ticketName'] = ticketName;
        obj['facial'] = facial;
        obj['checkInDate'] = checkInDate;
        obj['payment'] = payment;
        obj['lastStatus'] = lastStatus;
    }

    /**
     * Constructs a <code>EventParticipantsResponseDtoInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventParticipantsResponseDtoInner} obj Optional instance to populate.
     * @return {module:model/EventParticipantsResponseDtoInner} The populated <code>EventParticipantsResponseDtoInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventParticipantsResponseDtoInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('ticketName')) {
                obj['ticketName'] = ApiClient.convertToType(data['ticketName'], 'String');
            }
            if (data.hasOwnProperty('facial')) {
                obj['facial'] = ApiClient.convertToType(data['facial'], 'String');
            }
            if (data.hasOwnProperty('checkInDate')) {
                obj['checkInDate'] = ApiClient.convertToType(data['checkInDate'], Object);
            }
            if (data.hasOwnProperty('payment')) {
                obj['payment'] = ApiClient.convertToType(data['payment'], 'Boolean');
            }
            if (data.hasOwnProperty('lastStatus')) {
                obj['lastStatus'] = ApiClient.convertToType(data['lastStatus'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventParticipantsResponseDtoInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventParticipantsResponseDtoInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EventParticipantsResponseDtoInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['ticketName'] && !(typeof data['ticketName'] === 'string' || data['ticketName'] instanceof String)) {
            throw new Error("Expected the field `ticketName` to be a primitive type in the JSON string but got " + data['ticketName']);
        }
        // ensure the json data is a string
        if (data['facial'] && !(typeof data['facial'] === 'string' || data['facial'] instanceof String)) {
            throw new Error("Expected the field `facial` to be a primitive type in the JSON string but got " + data['facial']);
        }
        // ensure the json data is a string
        if (data['lastStatus'] && !(typeof data['lastStatus'] === 'string' || data['lastStatus'] instanceof String)) {
            throw new Error("Expected the field `lastStatus` to be a primitive type in the JSON string but got " + data['lastStatus']);
        }

        return true;
    }


}

EventParticipantsResponseDtoInner.RequiredProperties = ["id", "name", "status", "ticketName", "facial", "checkInDate", "payment", "lastStatus"];

/**
 * @member {String} id
 */
EventParticipantsResponseDtoInner.prototype['id'] = undefined;

/**
 * @member {String} name
 */
EventParticipantsResponseDtoInner.prototype['name'] = undefined;

/**
 * @member {module:model/EventParticipantsResponseDtoInner.StatusEnum} status
 */
EventParticipantsResponseDtoInner.prototype['status'] = undefined;

/**
 * @member {String} ticketName
 */
EventParticipantsResponseDtoInner.prototype['ticketName'] = undefined;

/**
 * @member {String} facial
 */
EventParticipantsResponseDtoInner.prototype['facial'] = undefined;

/**
 * @member {Object} checkInDate
 */
EventParticipantsResponseDtoInner.prototype['checkInDate'] = undefined;

/**
 * @member {Boolean} payment
 */
EventParticipantsResponseDtoInner.prototype['payment'] = undefined;

/**
 * @member {String} lastStatus
 */
EventParticipantsResponseDtoInner.prototype['lastStatus'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
EventParticipantsResponseDtoInner['StatusEnum'] = {

    /**
     * value: "CHECK_IN_EARLY"
     * @const
     */
    "CHECK_IN_EARLY": "CHECK_IN_EARLY",

    /**
     * value: "CHECK_IN"
     * @const
     */
    "CHECK_IN": "CHECK_IN",

    /**
     * value: "CHECK_OUT"
     * @const
     */
    "CHECK_OUT": "CHECK_OUT",

    /**
     * value: "CANCELED"
     * @const
     */
    "CANCELED": "CANCELED",

    /**
     * value: "ENABLE"
     * @const
     */
    "ENABLE": "ENABLE"
};



export default EventParticipantsResponseDtoInner;

