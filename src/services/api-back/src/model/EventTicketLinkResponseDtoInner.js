/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventTicketLinkResponseDtoInnerParticipantInner from './EventTicketLinkResponseDtoInnerParticipantInner';

/**
 * The EventTicketLinkResponseDtoInner model module.
 * @module model/EventTicketLinkResponseDtoInner
 * @version 1.0
 */
class EventTicketLinkResponseDtoInner {
    /**
     * Constructs a new <code>EventTicketLinkResponseDtoInner</code>.
     * @alias module:model/EventTicketLinkResponseDtoInner
     * @param id {String} 
     * @param eventTicketId {String} 
     * @param invite {Number} 
     * @param status {module:model/EventTicketLinkResponseDtoInner.StatusEnum} 
     * @param createdAt {Object} 
     * @param updatedAt {Object} 
     * @param participant {Array.<module:model/EventTicketLinkResponseDtoInnerParticipantInner>} 
     */
    constructor(id, eventTicketId, invite, status, createdAt, updatedAt, participant) { 
        
        EventTicketLinkResponseDtoInner.initialize(this, id, eventTicketId, invite, status, createdAt, updatedAt, participant);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, eventTicketId, invite, status, createdAt, updatedAt, participant) { 
        obj['id'] = id;
        obj['eventTicketId'] = eventTicketId;
        obj['invite'] = invite;
        obj['status'] = status;
        obj['createdAt'] = createdAt;
        obj['updatedAt'] = updatedAt;
        obj['participant'] = participant;
    }

    /**
     * Constructs a <code>EventTicketLinkResponseDtoInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventTicketLinkResponseDtoInner} obj Optional instance to populate.
     * @return {module:model/EventTicketLinkResponseDtoInner} The populated <code>EventTicketLinkResponseDtoInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventTicketLinkResponseDtoInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('eventTicketId')) {
                obj['eventTicketId'] = ApiClient.convertToType(data['eventTicketId'], 'String');
            }
            if (data.hasOwnProperty('invite')) {
                obj['invite'] = ApiClient.convertToType(data['invite'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], Object);
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], Object);
            }
            if (data.hasOwnProperty('participant')) {
                obj['participant'] = ApiClient.convertToType(data['participant'], [EventTicketLinkResponseDtoInnerParticipantInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventTicketLinkResponseDtoInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventTicketLinkResponseDtoInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EventTicketLinkResponseDtoInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['eventTicketId'] && !(typeof data['eventTicketId'] === 'string' || data['eventTicketId'] instanceof String)) {
            throw new Error("Expected the field `eventTicketId` to be a primitive type in the JSON string but got " + data['eventTicketId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        if (data['participant']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['participant'])) {
                throw new Error("Expected the field `participant` to be an array in the JSON data but got " + data['participant']);
            }
            // validate the optional field `participant` (array)
            for (const item of data['participant']) {
                EventTicketLinkResponseDtoInnerParticipantInner.validateJSON(item);
            };
        }

        return true;
    }


}

EventTicketLinkResponseDtoInner.RequiredProperties = ["id", "eventTicketId", "invite", "status", "createdAt", "updatedAt", "participant"];

/**
 * @member {String} id
 */
EventTicketLinkResponseDtoInner.prototype['id'] = undefined;

/**
 * @member {String} eventTicketId
 */
EventTicketLinkResponseDtoInner.prototype['eventTicketId'] = undefined;

/**
 * @member {Number} invite
 */
EventTicketLinkResponseDtoInner.prototype['invite'] = undefined;

/**
 * @member {module:model/EventTicketLinkResponseDtoInner.StatusEnum} status
 */
EventTicketLinkResponseDtoInner.prototype['status'] = undefined;

/**
 * @member {Object} createdAt
 */
EventTicketLinkResponseDtoInner.prototype['createdAt'] = undefined;

/**
 * @member {Object} updatedAt
 */
EventTicketLinkResponseDtoInner.prototype['updatedAt'] = undefined;

/**
 * @member {Array.<module:model/EventTicketLinkResponseDtoInnerParticipantInner>} participant
 */
EventTicketLinkResponseDtoInner.prototype['participant'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
EventTicketLinkResponseDtoInner['StatusEnum'] = {

    /**
     * value: "ENABLE"
     * @const
     */
    "ENABLE": "ENABLE",

    /**
     * value: "FULL"
     * @const
     */
    "FULL": "FULL",

    /**
     * value: "PART_FULL"
     * @const
     */
    "PART_FULL": "PART_FULL"
};



export default EventTicketLinkResponseDtoInner;

