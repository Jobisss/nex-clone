/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner model module.
 * @module model/EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner
 * @version 1.0
 */
class EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner {
    /**
     * Constructs a new <code>EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner</code>.
     * @alias module:model/EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner
     * @param id {String} 
     * @param eventTicketId {String} 
     * @param eventTicketPriceId {String} 
     * @param userId {String} 
     * @param userTicketId {String} 
     * @param isBonus {Boolean} 
     * @param invite {Number} 
     * @param status {module:model/EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner.StatusEnum} 
     * @param createdAt {Object} 
     * @param updatedAt {Object} 
     */
    constructor(id, eventTicketId, eventTicketPriceId, userId, userTicketId, isBonus, invite, status, createdAt, updatedAt) { 
        
        EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner.initialize(this, id, eventTicketId, eventTicketPriceId, userId, userTicketId, isBonus, invite, status, createdAt, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, eventTicketId, eventTicketPriceId, userId, userTicketId, isBonus, invite, status, createdAt, updatedAt) { 
        obj['id'] = id;
        obj['eventTicketId'] = eventTicketId;
        obj['eventTicketPriceId'] = eventTicketPriceId;
        obj['userId'] = userId;
        obj['userTicketId'] = userTicketId;
        obj['isBonus'] = isBonus;
        obj['invite'] = invite;
        obj['status'] = status;
        obj['createdAt'] = createdAt;
        obj['updatedAt'] = updatedAt;
    }

    /**
     * Constructs a <code>EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner} obj Optional instance to populate.
     * @return {module:model/EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner} The populated <code>EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('eventTicketId')) {
                obj['eventTicketId'] = ApiClient.convertToType(data['eventTicketId'], 'String');
            }
            if (data.hasOwnProperty('eventTicketPriceId')) {
                obj['eventTicketPriceId'] = ApiClient.convertToType(data['eventTicketPriceId'], 'String');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
            if (data.hasOwnProperty('userTicketId')) {
                obj['userTicketId'] = ApiClient.convertToType(data['userTicketId'], 'String');
            }
            if (data.hasOwnProperty('isBonus')) {
                obj['isBonus'] = ApiClient.convertToType(data['isBonus'], 'Boolean');
            }
            if (data.hasOwnProperty('invite')) {
                obj['invite'] = ApiClient.convertToType(data['invite'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], Object);
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['eventTicketId'] && !(typeof data['eventTicketId'] === 'string' || data['eventTicketId'] instanceof String)) {
            throw new Error("Expected the field `eventTicketId` to be a primitive type in the JSON string but got " + data['eventTicketId']);
        }
        // ensure the json data is a string
        if (data['eventTicketPriceId'] && !(typeof data['eventTicketPriceId'] === 'string' || data['eventTicketPriceId'] instanceof String)) {
            throw new Error("Expected the field `eventTicketPriceId` to be a primitive type in the JSON string but got " + data['eventTicketPriceId']);
        }
        // ensure the json data is a string
        if (data['userId'] && !(typeof data['userId'] === 'string' || data['userId'] instanceof String)) {
            throw new Error("Expected the field `userId` to be a primitive type in the JSON string but got " + data['userId']);
        }
        // ensure the json data is a string
        if (data['userTicketId'] && !(typeof data['userTicketId'] === 'string' || data['userTicketId'] instanceof String)) {
            throw new Error("Expected the field `userTicketId` to be a primitive type in the JSON string but got " + data['userTicketId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner.RequiredProperties = ["id", "eventTicketId", "eventTicketPriceId", "userId", "userTicketId", "isBonus", "invite", "status", "createdAt", "updatedAt"];

/**
 * @member {String} id
 */
EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner.prototype['id'] = undefined;

/**
 * @member {String} eventTicketId
 */
EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner.prototype['eventTicketId'] = undefined;

/**
 * @member {String} eventTicketPriceId
 */
EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner.prototype['eventTicketPriceId'] = undefined;

/**
 * @member {String} userId
 */
EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner.prototype['userId'] = undefined;

/**
 * @member {String} userTicketId
 */
EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner.prototype['userTicketId'] = undefined;

/**
 * @member {Boolean} isBonus
 */
EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner.prototype['isBonus'] = undefined;

/**
 * @member {Number} invite
 */
EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner.prototype['invite'] = undefined;

/**
 * @member {module:model/EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner.StatusEnum} status
 */
EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner.prototype['status'] = undefined;

/**
 * @member {Object} createdAt
 */
EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner.prototype['createdAt'] = undefined;

/**
 * @member {Object} updatedAt
 */
EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner.prototype['updatedAt'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner['StatusEnum'] = {

    /**
     * value: "ENABLE"
     * @const
     */
    "ENABLE": "ENABLE",

    /**
     * value: "FULL"
     * @const
     */
    "FULL": "FULL",

    /**
     * value: "PART_FULL"
     * @const
     */
    "PART_FULL": "PART_FULL"
};



export default EventTicketDashboardResponseDtoInnerTicketBatchInnerLinkInner;

