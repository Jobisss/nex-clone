/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventTicketSellDtoEventTicketsInner model module.
 * @module model/EventTicketSellDtoEventTicketsInner
 * @version 1.0
 */
class EventTicketSellDtoEventTicketsInner {
    /**
     * Constructs a new <code>EventTicketSellDtoEventTicketsInner</code>.
     * @alias module:model/EventTicketSellDtoEventTicketsInner
     * @param ticketPriceId {String} 
     * @param ticketQuantity {Number} 
     */
    constructor(ticketPriceId, ticketQuantity) { 
        
        EventTicketSellDtoEventTicketsInner.initialize(this, ticketPriceId, ticketQuantity);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ticketPriceId, ticketQuantity) { 
        obj['ticketPriceId'] = ticketPriceId;
        obj['ticketQuantity'] = ticketQuantity;
    }

    /**
     * Constructs a <code>EventTicketSellDtoEventTicketsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventTicketSellDtoEventTicketsInner} obj Optional instance to populate.
     * @return {module:model/EventTicketSellDtoEventTicketsInner} The populated <code>EventTicketSellDtoEventTicketsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventTicketSellDtoEventTicketsInner();

            if (data.hasOwnProperty('ticketPriceId')) {
                obj['ticketPriceId'] = ApiClient.convertToType(data['ticketPriceId'], 'String');
            }
            if (data.hasOwnProperty('ticketQuantity')) {
                obj['ticketQuantity'] = ApiClient.convertToType(data['ticketQuantity'], 'Number');
            }
            if (data.hasOwnProperty('participant')) {
                obj['participant'] = ApiClient.convertToType(data['participant'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventTicketSellDtoEventTicketsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventTicketSellDtoEventTicketsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EventTicketSellDtoEventTicketsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ticketPriceId'] && !(typeof data['ticketPriceId'] === 'string' || data['ticketPriceId'] instanceof String)) {
            throw new Error("Expected the field `ticketPriceId` to be a primitive type in the JSON string but got " + data['ticketPriceId']);
        }
        // ensure the json data is a string
        if (data['participant'] && !(typeof data['participant'] === 'string' || data['participant'] instanceof String)) {
            throw new Error("Expected the field `participant` to be a primitive type in the JSON string but got " + data['participant']);
        }

        return true;
    }


}

EventTicketSellDtoEventTicketsInner.RequiredProperties = ["ticketPriceId", "ticketQuantity"];

/**
 * @member {String} ticketPriceId
 */
EventTicketSellDtoEventTicketsInner.prototype['ticketPriceId'] = undefined;

/**
 * @member {Number} ticketQuantity
 */
EventTicketSellDtoEventTicketsInner.prototype['ticketQuantity'] = undefined;

/**
 * @member {String} participant
 */
EventTicketSellDtoEventTicketsInner.prototype['participant'] = undefined;






export default EventTicketSellDtoEventTicketsInner;

