/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventTicketLinkByEmailResponseDtoUncompletedInner from './EventTicketLinkByEmailResponseDtoUncompletedInner';
import EventTicketLinkByEmailResponseDtoUsersInner from './EventTicketLinkByEmailResponseDtoUsersInner';

/**
 * The EventTicketLinkByEmailResponseDto model module.
 * @module model/EventTicketLinkByEmailResponseDto
 * @version 1.0
 */
class EventTicketLinkByEmailResponseDto {
    /**
     * Constructs a new <code>EventTicketLinkByEmailResponseDto</code>.
     * @alias module:model/EventTicketLinkByEmailResponseDto
     * @param users {Array.<module:model/EventTicketLinkByEmailResponseDtoUsersInner>} 
     * @param uncompleted {Array.<module:model/EventTicketLinkByEmailResponseDtoUncompletedInner>} 
     */
    constructor(users, uncompleted) { 
        
        EventTicketLinkByEmailResponseDto.initialize(this, users, uncompleted);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, users, uncompleted) { 
        obj['users'] = users;
        obj['uncompleted'] = uncompleted;
    }

    /**
     * Constructs a <code>EventTicketLinkByEmailResponseDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventTicketLinkByEmailResponseDto} obj Optional instance to populate.
     * @return {module:model/EventTicketLinkByEmailResponseDto} The populated <code>EventTicketLinkByEmailResponseDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventTicketLinkByEmailResponseDto();

            if (data.hasOwnProperty('users')) {
                obj['users'] = ApiClient.convertToType(data['users'], [EventTicketLinkByEmailResponseDtoUsersInner]);
            }
            if (data.hasOwnProperty('uncompleted')) {
                obj['uncompleted'] = ApiClient.convertToType(data['uncompleted'], [EventTicketLinkByEmailResponseDtoUncompletedInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventTicketLinkByEmailResponseDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventTicketLinkByEmailResponseDto</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EventTicketLinkByEmailResponseDto.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['users']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['users'])) {
                throw new Error("Expected the field `users` to be an array in the JSON data but got " + data['users']);
            }
            // validate the optional field `users` (array)
            for (const item of data['users']) {
                EventTicketLinkByEmailResponseDtoUsersInner.validateJSON(item);
            };
        }
        if (data['uncompleted']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['uncompleted'])) {
                throw new Error("Expected the field `uncompleted` to be an array in the JSON data but got " + data['uncompleted']);
            }
            // validate the optional field `uncompleted` (array)
            for (const item of data['uncompleted']) {
                EventTicketLinkByEmailResponseDtoUncompletedInner.validateJSON(item);
            };
        }

        return true;
    }


}

EventTicketLinkByEmailResponseDto.RequiredProperties = ["users", "uncompleted"];

/**
 * @member {Array.<module:model/EventTicketLinkByEmailResponseDtoUsersInner>} users
 */
EventTicketLinkByEmailResponseDto.prototype['users'] = undefined;

/**
 * @member {Array.<module:model/EventTicketLinkByEmailResponseDtoUncompletedInner>} uncompleted
 */
EventTicketLinkByEmailResponseDto.prototype['uncompleted'] = undefined;






export default EventTicketLinkByEmailResponseDto;

