/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NexEventApi);
  }
}(this, function(expect, NexEventApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NexEventApi.EventProducerApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EventProducerApi', function() {
    describe('eventProducerControllerCreateEvent', function() {
      it('should call eventProducerControllerCreateEvent successfully', function(done) {
        //uncomment below and update the code to test eventProducerControllerCreateEvent
        //instance.eventProducerControllerCreateEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventProducerControllerCreateEventPhoto', function() {
      it('should call eventProducerControllerCreateEventPhoto successfully', function(done) {
        //uncomment below and update the code to test eventProducerControllerCreateEventPhoto
        //instance.eventProducerControllerCreateEventPhoto(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventProducerControllerCreateEventTerms', function() {
      it('should call eventProducerControllerCreateEventTerms successfully', function(done) {
        //uncomment below and update the code to test eventProducerControllerCreateEventTerms
        //instance.eventProducerControllerCreateEventTerms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventProducerControllerFinancialDashboard', function() {
      it('should call eventProducerControllerFinancialDashboard successfully', function(done) {
        //uncomment below and update the code to test eventProducerControllerFinancialDashboard
        //instance.eventProducerControllerFinancialDashboard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventProducerControllerFindAllEvents', function() {
      it('should call eventProducerControllerFindAllEvents successfully', function(done) {
        //uncomment below and update the code to test eventProducerControllerFindAllEvents
        //instance.eventProducerControllerFindAllEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventProducerControllerFindAllParticipants', function() {
      it('should call eventProducerControllerFindAllParticipants successfully', function(done) {
        //uncomment below and update the code to test eventProducerControllerFindAllParticipants
        //instance.eventProducerControllerFindAllParticipants(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventProducerControllerFindOneDashboard', function() {
      it('should call eventProducerControllerFindOneDashboard successfully', function(done) {
        //uncomment below and update the code to test eventProducerControllerFindOneDashboard
        //instance.eventProducerControllerFindOneDashboard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventProducerControllerFindOneDashboardParticipantPanel', function() {
      it('should call eventProducerControllerFindOneDashboardParticipantPanel successfully', function(done) {
        //uncomment below and update the code to test eventProducerControllerFindOneDashboardParticipantPanel
        //instance.eventProducerControllerFindOneDashboardParticipantPanel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventProducerControllerGeneralDashboard', function() {
      it('should call eventProducerControllerGeneralDashboard successfully', function(done) {
        //uncomment below and update the code to test eventProducerControllerGeneralDashboard
        //instance.eventProducerControllerGeneralDashboard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventProducerControllerGetEventsPrintAutomatic', function() {
      it('should call eventProducerControllerGetEventsPrintAutomatic successfully', function(done) {
        //uncomment below and update the code to test eventProducerControllerGetEventsPrintAutomatic
        //instance.eventProducerControllerGetEventsPrintAutomatic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventProducerControllerGetPartClient', function() {
      it('should call eventProducerControllerGetPartClient successfully', function(done) {
        //uncomment below and update the code to test eventProducerControllerGetPartClient
        //instance.eventProducerControllerGetPartClient(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventProducerControllerUpdateEvent', function() {
      it('should call eventProducerControllerUpdateEvent successfully', function(done) {
        //uncomment below and update the code to test eventProducerControllerUpdateEvent
        //instance.eventProducerControllerUpdateEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventProducerControllerUpdateIsPrint', function() {
      it('should call eventProducerControllerUpdateIsPrint successfully', function(done) {
        //uncomment below and update the code to test eventProducerControllerUpdateIsPrint
        //instance.eventProducerControllerUpdateIsPrint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
