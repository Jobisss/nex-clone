/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NexEventApi);
  }
}(this, function(expect, NexEventApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NexEventApi.EventParticipantApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EventParticipantApi', function() {
    describe('eventParticipantControllerCheckTicketIsAvaible', function() {
      it('should call eventParticipantControllerCheckTicketIsAvaible successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerCheckTicketIsAvaible
        //instance.eventParticipantControllerCheckTicketIsAvaible(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerCreateNetwork', function() {
      it('should call eventParticipantControllerCreateNetwork successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerCreateNetwork
        //instance.eventParticipantControllerCreateNetwork(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerCreateParticipant', function() {
      it('should call eventParticipantControllerCreateParticipant successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerCreateParticipant
        //instance.eventParticipantControllerCreateParticipant(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerCreateParticipantFacial', function() {
      it('should call eventParticipantControllerCreateParticipantFacial successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerCreateParticipantFacial
        //instance.eventParticipantControllerCreateParticipantFacial(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerCreateParticipantNetworks', function() {
      it('should call eventParticipantControllerCreateParticipantNetworks successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerCreateParticipantNetworks
        //instance.eventParticipantControllerCreateParticipantNetworks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerCreateQuizResponses', function() {
      it('should call eventParticipantControllerCreateQuizResponses successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerCreateQuizResponses
        //instance.eventParticipantControllerCreateQuizResponses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerEventAddViewCount', function() {
      it('should call eventParticipantControllerEventAddViewCount successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerEventAddViewCount
        //instance.eventParticipantControllerEventAddViewCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerEventTicketInfo', function() {
      it('should call eventParticipantControllerEventTicketInfo successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerEventTicketInfo
        //instance.eventParticipantControllerEventTicketInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerEventTicketSell', function() {
      it('should call eventParticipantControllerEventTicketSell successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerEventTicketSell
        //instance.eventParticipantControllerEventTicketSell(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerFindAllPublicEvents', function() {
      it('should call eventParticipantControllerFindAllPublicEvents successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerFindAllPublicEvents
        //instance.eventParticipantControllerFindAllPublicEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerFindAllPublicEventsHome', function() {
      it('should call eventParticipantControllerFindAllPublicEventsHome successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerFindAllPublicEventsHome
        //instance.eventParticipantControllerFindAllPublicEventsHome(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerFindByEmail', function() {
      it('should call eventParticipantControllerFindByEmail successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerFindByEmail
        //instance.eventParticipantControllerFindByEmail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerFindEventInfo', function() {
      it('should call eventParticipantControllerFindEventInfo successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerFindEventInfo
        //instance.eventParticipantControllerFindEventInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerFindOnePublicEvent', function() {
      it('should call eventParticipantControllerFindOnePublicEvent successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerFindOnePublicEvent
        //instance.eventParticipantControllerFindOnePublicEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerGetAllParticipantNetworks', function() {
      it('should call eventParticipantControllerGetAllParticipantNetworks successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerGetAllParticipantNetworks
        //instance.eventParticipantControllerGetAllParticipantNetworks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerGetEventsMoreView', function() {
      it('should call eventParticipantControllerGetEventsMoreView successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerGetEventsMoreView
        //instance.eventParticipantControllerGetEventsMoreView(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerGetQuiz', function() {
      it('should call eventParticipantControllerGetQuiz successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerGetQuiz
        //instance.eventParticipantControllerGetQuiz(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerGetTicketInfoByLink', function() {
      it('should call eventParticipantControllerGetTicketInfoByLink successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerGetTicketInfoByLink
        //instance.eventParticipantControllerGetTicketInfoByLink(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerListTickets', function() {
      it('should call eventParticipantControllerListTickets successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerListTickets
        //instance.eventParticipantControllerListTickets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerNetworkHistoric', function() {
      it('should call eventParticipantControllerNetworkHistoric successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerNetworkHistoric
        //instance.eventParticipantControllerNetworkHistoric(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerNetworkParticipant', function() {
      it('should call eventParticipantControllerNetworkParticipant successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerNetworkParticipant
        //instance.eventParticipantControllerNetworkParticipant(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerParticipantTicket', function() {
      it('should call eventParticipantControllerParticipantTicket successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerParticipantTicket
        //instance.eventParticipantControllerParticipantTicket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerThanksScreen', function() {
      it('should call eventParticipantControllerThanksScreen successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerThanksScreen
        //instance.eventParticipantControllerThanksScreen(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerUserIsParticipantInEventByLinkId', function() {
      it('should call eventParticipantControllerUserIsParticipantInEventByLinkId successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerUserIsParticipantInEventByLinkId
        //instance.eventParticipantControllerUserIsParticipantInEventByLinkId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventParticipantControllerUserIsParticipantInEventByQuizId', function() {
      it('should call eventParticipantControllerUserIsParticipantInEventByQuizId successfully', function(done) {
        //uncomment below and update the code to test eventParticipantControllerUserIsParticipantInEventByQuizId
        //instance.eventParticipantControllerUserIsParticipantInEventByQuizId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
