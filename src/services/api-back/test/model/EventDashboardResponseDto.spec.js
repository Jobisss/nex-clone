/**
 * Nex Event API
 * Utilize essa documentação para realizar a integração com o nosso sistema
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NexEventApi);
  }
}(this, function(expect, NexEventApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NexEventApi.EventDashboardResponseDto();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EventDashboardResponseDto', function() {
    it('should create an instance of EventDashboardResponseDto', function() {
      // uncomment below and update the code to test EventDashboardResponseDto
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be.a(NexEventApi.EventDashboardResponseDto);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property slug (base name: "slug")', function() {
      // uncomment below and update the code to test the property slug
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property paymentStatus (base name: "paymentStatus")', function() {
      // uncomment below and update the code to test the property paymentStatus
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property paymentUrl (base name: "paymentUrl")', function() {
      // uncomment below and update the code to test the property paymentUrl
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property eventStaff (base name: "eventStaff")', function() {
      // uncomment below and update the code to test the property eventStaff
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property eventViews (base name: "eventViews")', function() {
      // uncomment below and update the code to test the property eventViews
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property eventCity (base name: "eventCity")', function() {
      // uncomment below and update the code to test the property eventCity
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property eventState (base name: "eventState")', function() {
      // uncomment below and update the code to test the property eventState
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property startAt (base name: "startAt")', function() {
      // uncomment below and update the code to test the property startAt
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property _public (base name: "public")', function() {
      // uncomment below and update the code to test the property _public
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property eventParticipantsCount (base name: "eventParticipantsCount")', function() {
      // uncomment below and update the code to test the property eventParticipantsCount
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property eventParticipantLimitCount (base name: "eventParticipantLimitCount")', function() {
      // uncomment below and update the code to test the property eventParticipantLimitCount
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property eventParcitipantAccreditationsCount (base name: "eventParcitipantAccreditationsCount")', function() {
      // uncomment below and update the code to test the property eventParcitipantAccreditationsCount
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property eventParcitipantAccreditationsPercentual (base name: "eventParcitipantAccreditationsPercentual")', function() {
      // uncomment below and update the code to test the property eventParcitipantAccreditationsPercentual
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property eventTotal (base name: "eventTotal")', function() {
      // uncomment below and update the code to test the property eventTotal
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property eventTickets (base name: "eventTickets")', function() {
      // uncomment below and update the code to test the property eventTickets
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property eventTicketPercentualSell (base name: "eventTicketPercentualSell")', function() {
      // uncomment below and update the code to test the property eventTicketPercentualSell
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

    it('should have the property sellDiary (base name: "sellDiary")', function() {
      // uncomment below and update the code to test the property sellDiary
      //var instance = new NexEventApi.EventDashboardResponseDto();
      //expect(instance).to.be();
    });

  });

}));
